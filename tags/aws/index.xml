<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aws on 1Q77</title><link>https://preview-blog.1q77.com/tags/aws/</link><description>Recent content in aws on 1Q77</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 31 Dec 2021 07:28:54 +0000</lastBuildDate><atom:link href="https://preview-blog.1q77.com/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>CloudFront のレスポンスに Security Headers を追加する</title><link>https://preview-blog.1q77.com/2021/12/cloudfront-security-headers/</link><pubDate>Fri, 31 Dec 2021 07:28:54 +0000</pubDate><guid>https://preview-blog.1q77.com/2021/12/cloudfront-security-headers/</guid><description>「Amazon CloudFront が設定可能な CORS、セキュリティ、およびカスタム HTTP レスポンスヘッダーをサポート」で Lambda@Edge なしで Response にカスタムヘッダーを追加するこ</description></item><item><title>send-ssh-public-key と ssm start-session の合わせ技</title><link>https://preview-blog.1q77.com/2020/11/send-ssh-public-key-and-ssm-start-session/</link><pubDate>Mon, 23 Nov 2020 11:35:01 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/11/send-ssh-public-key-and-ssm-start-session/</guid><description>以前、「SSM Session Manager 経由での SSH」で、Public IP address を持たない EC2 Instance に対して SSH 接続する方法を確認したが、SSM の Session Manager だけでは事前に EC2 Instance 側に Public</description></item><item><title>SSM Session Manager 経由での SSH</title><link>https://preview-blog.1q77.com/2020/04/ssh-connection-through-session-manager/</link><pubDate>Sun, 05 Apr 2020 14:49:01 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/04/ssh-connection-through-session-manager/</guid><description>&amp;ldquo;Step 7: (Optional) Enable SSH Connections Through Session Manager&amp;rdquo; にある通りだが、SSH クライアント側に session-manager-plugin をインストール して、~/.ssh/config に次のように設定すれば \# SSH over Session Manager host i-\*</description></item><item><title>eksctl で何ができるのか</title><link>https://preview-blog.1q77.com/2020/01/eksctl/</link><pubDate>Sat, 11 Jan 2020 15:02:03 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/01/eksctl/</guid><description>eksctl が何をやってくれるのが、何ができるのかを確認します。 eksctl create cluster # いきなり eksctl create cluster を実行するだけでクラスタが作れるっぽいのでひとまず試してみる。 $</description></item><item><title>Lightsail の snapshot を自動で取得する</title><link>https://preview-blog.1q77.com/2019/10/lightsail-automatic-snapshots/</link><pubDate>Mon, 07 Oct 2019 16:09:06 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/10/lightsail-automatic-snapshots/</guid><description>以前、「AWS Lightsail の snapshot 取得を自動化する」という記事を書きましたが、先日 Lightsail の自動スナップショット管理機能がリリースされました「Amazon Lightsail now provides</description></item><item><title>AWS Lightsail の snapshot 取得を自動化する</title><link>https://preview-blog.1q77.com/2019/05/aws-lightsail-auto-snapshots/</link><pubDate>Wed, 15 May 2019 15:33:55 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/05/aws-lightsail-auto-snapshots/</guid><description>https://github.com/amazon-archives/lightsail-auto-snapshots を使うと非常に簡単。 awscli がインストール済みで、認証設定もされているとすると、README に書いてあるように次のように実行すれば CloudFormation で lambda と CloudWatch Event が</description></item><item><title>WrodPress を Lightsail + CloudFront で構築する</title><link>https://preview-blog.1q77.com/2018/12/building-wrodpress-site-on-lightsail-with-cloudfront/</link><pubDate>Sat, 29 Dec 2018 03:16:30 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/12/building-wrodpress-site-on-lightsail-with-cloudfront/</guid><description>IDCF Cloud が個人向けサービスを終了する # IDCF Cloud の個人向けサービスが終了することとなりました。これまで IDCF Cloud の500円/月サーバーで WordPress を運用していたため</description></item><item><title>nodejs がサポートしてなかった結合 gzip ファイル</title><link>https://preview-blog.1q77.com/2017/01/concatinated-gzip-with-nodejs/</link><pubDate>Mon, 23 Jan 2017 15:15:53 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/01/concatinated-gzip-with-nodejs/</guid><description>AWS Lambda で Application Load Balancer (ALB) のログを Elasticsearch へ投入して Kibana でビジュアライズしようと思い nodejs で Lambda Function を書いてみました。 https://github.com/awslabs/amazon-elasticsearch-lambda-samples/blob/master/src/s3_lambda_es.js ここにサンプルがあって、おっ？これはほぼこのまま</description></item><item><title>WAL-E で PostgreSQL の Backup / Restore</title><link>https://preview-blog.1q77.com/2016/09/postgressql-backup-and-restore-using-wal-e/</link><pubDate>Thu, 01 Sep 2016 15:41:07 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/09/postgressql-backup-and-restore-using-wal-e/</guid><description>PostgreSQL の Backup / Restore ツールとして heroku で開発されたとされる WAL-E がある。 フィジカル（物理）バックアップと WAL のアーカイブを S3 互換のオブジェクトストレージや Azure BLOB Storage</description></item><item><title>Acmesmith で証明書発行を試す - その3</title><link>https://preview-blog.1q77.com/2016/02/acmesmith-3/</link><pubDate>Mon, 08 Feb 2016 16:23:13 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/02/acmesmith-3/</guid><description>過去2回 Acmesmith を filesystem, S3 を storage として試してきました。 Acmesmith で証明書発行を試す - その1 (filesystem) Acmesmith で証明書発行を試す - その2 (S3) 証明書の秘密鍵はセキュアな管理がが必要</description></item><item><title>Acmesmith で証明書発行を試す - その2</title><link>https://preview-blog.1q77.com/2016/02/acmesmith-2/</link><pubDate>Sun, 07 Feb 2016 09:00:08 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/02/acmesmith-2/</guid><description>前回「Acmesmith で証明書発行を試す - その1」で で filesystem に保存する方法を試してみました。 今回は AWS S3 に保存するテストを行ってみます。KMS は</description></item><item><title>Acmesmith で証明書発行を試す - その1</title><link>https://preview-blog.1q77.com/2016/02/acmesmith-1/</link><pubDate>Wed, 03 Feb 2016 16:42:28 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/02/acmesmith-1/</guid><description>無料でSSL証明書の発行ができる Let&amp;rsquo;s Encrypt が Public Beta となり、これからどんどん利用されていくと思われますが、公式(?)のツール https://github.com/letsencrypt/letsencrypt はちょっと使いにくいとこ</description></item><item><title>AWS Route53 の管理に Roadworker を試した</title><link>https://preview-blog.1q77.com/2014/01/managing-aws-route53-with-roadworker/</link><pubDate>Wed, 15 Jan 2014 15:43:04 +0000</pubDate><guid>https://preview-blog.1q77.com/2014/01/managing-aws-route53-with-roadworker/</guid><description>DNS を AWS Route53 で管理するにあたり、ブラウザでポチポチやるのはやっぱり誤操作が怖いし、履歴の管理ができないよなぁということで Roadworker を試してみました。 イン</description></item><item><title>RDBMS in the Cloud: PostgreSQL on AWS を読んで</title><link>https://preview-blog.1q77.com/2013/07/rdbms-in-the-cloud-postgresql-on-aws/</link><pubDate>Fri, 12 Jul 2013 15:13:58 +0000</pubDate><guid>https://preview-blog.1q77.com/2013/07/rdbms-in-the-cloud-postgresql-on-aws/</guid><description>【AWS発表】AWS上でPostgreSQLを実行する - 新しいホワイトペーパーを公開 にあった RDBMS in the Cloud: PostgreSQL on AWS (PDF) を読んだので個人的にフムフムと思</description></item><item><title>Route 53 を使ってみた</title><link>https://preview-blog.1q77.com/2013/02/route-53-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</link><pubDate>Sun, 03 Feb 2013 15:06:02 +0000</pubDate><guid>https://preview-blog.1q77.com/2013/02/route-53-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F/</guid><description>【試してみた】Amazon Route 53にドメインを移動してみた。 | Pocketstudio.jp log3 を見て、お、私も試してみようと。 簡単すぎて上記のブログ以上に書くことがない&amp;</description></item></channel></rss>