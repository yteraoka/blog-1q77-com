<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Swarm on 1Q77</title><link>https://preview-blog.1q77.com/tags/swarm/</link><description>Recent content in Swarm on 1Q77</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sat, 13 Oct 2018 05:00:02 +0000</lastBuildDate><atom:link href="https://preview-blog.1q77.com/tags/swarm/index.xml" rel="self" type="application/rss+xml"/><item><title>Single node docker swarm でお手軽 rolling update</title><link>https://preview-blog.1q77.com/2018/10/rolling-update-on-single-node-docker-swarm/</link><pubDate>Sat, 13 Oct 2018 05:00:02 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/10/rolling-update-on-single-node-docker-swarm/</guid><description>https://kazeburo.hatenablog.com/entry/2018/10/09/174111 という記事をみて、次のようなブコメを書いたのですが実際には試したことがなかったのでやってみることにしました。 これは1サーバーでも簡単にロー</description></item><item><title>Docker Swarm mode を知る (secret)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-4/</link><pubDate>Sat, 24 Mar 2018 15:59:18 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-4/</guid><description>今回は docker secret を使ってみます。 Manage sensitive data with Docker secrets に使い方が書かれています。Kubernetes の Secrets とかなり似てます。 docker secret コマンドの syntax は次のようになって</description></item><item><title>Docker Swarm mode を知る (Swarm on Windows)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-3/</link><pubDate>Tue, 20 Mar 2018 15:02:17 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-3/</guid><description>Docker Swarm を Windows 上に構築してみます。 https://docs.docker.com/get-started/part4/ にドキュメントがありました。私の家の Laptop は Windows Pro じゃないから VirtualBox 使うやつです。 Docker Machine を2台作成 # docker-machine create --driver virtualbox myvm1 docker-machine create --driver virtualbox myvm2 $</description></item><item><title>Docker Swarm mode を知る (stack)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-2/</link><pubDate>Sat, 17 Mar 2018 16:11:55 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-2/</guid><description>docker-compose で stack を deploy する # https://docs.docker.com/engine/swarm/stack-deploy/ にあるサンプルアプリ、設定を用いて実際に動かしてみます。使ったコードは https://github.com/yteraoka/stackdemo に、イメージは https://hub.docker.com/r/yteraoka/stackdemo/ に。 次の内容の docker-compose.yml を用意し``` version: &amp;lsquo;3&amp;rsquo;</description></item><item><title>Docker Swarm mode を知る (setup)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-1/</link><pubDate>Mon, 12 Mar 2018 15:13:03 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-1/</guid><description>時代は Kubernetes ですが、Docker Swarm mode を再調査していみます。 Swarm mode については 1.12 での登場時に調査した（Docker 1.12 の衝撃 [slideshare]）際</description></item><item><title>docker 1.13 の secrets を試す</title><link>https://preview-blog.1q77.com/2017/02/docker-1-13-secrets/</link><pubDate>Fri, 10 Feb 2017 14:54:59 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/02/docker-1-13-secrets/</guid><description>Introducing Docker Secrets Management で紹介されているパスワードなどの機密情報管理の仕組みを試してみました。 サーバー3台を起動 # いつものように DigitalOcean で Docker 1.13 on Ubuntu 16.04 のサーバーを3</description></item><item><title>Docker 1.12-rc5 を試す - part1</title><link>https://preview-blog.1q77.com/2016/07/docker-1-12-rc5-part1/</link><pubDate>Thu, 28 Jul 2016 16:47:56 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/07/docker-1-12-rc5-part1/</guid><description>そろそろ 1.12 の正式版がリリースされる予定ですが DigitalOcean に Ubuntu 14.04 を4台用意して Docker 1.12-rc5 をインストールします。 root@sm01:~# curl -fsSL https://test.docker.com/ | sh root@sm01:~# docker version Client: Version: 1.12.0-rc5 API version: 1.24 Go version: go1.6.3 Git commit: a3f2063 Built: Tue Jul</description></item><item><title>Docker 1.12-RC3 の HEALTHCHECK を試す</title><link>https://preview-blog.1q77.com/2016/07/docker-healthcheck/</link><pubDate>Tue, 05 Jul 2016 16:09:40 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/07/docker-healthcheck/</guid><description>2016年7月14日にリリースされる予定の Docker 1.12 ですが RC3 に HEALTHCHECK 機能が入ったようなのでこれを試してみます。（1.12 のその他の目玉機能はDocke</description></item><item><title>Docker Swarm を試す – その4</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part4/</link><pubDate>Sun, 20 Mar 2016 15:29:45 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part4/</guid><description>今回は Get started with multi-host networking に沿ってマルチホストでのオーバーレイネットワークを試してみます。 KVS として Consul を立ち上げる # まず mh-keystore という名前（名前はなんでも良い</description></item><item><title>Docker Swarm を試す – その3</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part3/</link><pubDate>Thu, 17 Mar 2016 15:48:43 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part3/</guid><description>Docker Swarm を試す – その１ で swarm の agent の join はどうやって manager (master?) を探しているのだろう？マルチキャスト？と書いた部分ですが Docker Swarm Discovery https://docs.docker.com/swarm/discovery/ に書いてありました。 「Dock</description></item><item><title>Docker Swarm を試す – その2</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part2/</link><pubDate>Wed, 16 Mar 2016 15:42:09 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part2/</guid><description>前回 の続きです。 $ docker info Containers: 8 Running: 4 Paused: 0 Stopped: 4 Images: 8 Server Version: swarm/1.1.3 Role: primary Strategy: spread Filters: health, port, dependency, affinity, constraint Nodes: 2 agent1: 192.168.99.101:2376 └ Status: Healthy └ Containers: 3 └ Reserved CPUs: 0 / 1 └ Reserved Memory: 0 B / 1.021 GiB └ Labels: executiondriver=native-0.2, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.10.3 (TCL 6.4.1); master : 625117e -</description></item><item><title>Docker Swarm を試す - その１</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part1/</link><pubDate>Tue, 15 Mar 2016 15:22:50 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part1/</guid><description>Evaluate Swarm in a sandbox を参考に Docker Swarm を試してみます。 Swarm クラスタを構築するための docker machine を作成する # docker-machine の現状確認 # $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS default - virtualbox Stopped Unknown 今は不要なので</description></item></channel></rss>