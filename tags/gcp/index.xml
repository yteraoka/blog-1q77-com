<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GCP on 1Q77</title><link>https://preview-blog.1q77.com/tags/gcp/</link><description>Recent content in GCP on 1Q77</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 13 Mar 2020 15:40:41 +0000</lastBuildDate><atom:link href="https://preview-blog.1q77.com/tags/gcp/index.xml" rel="self" type="application/rss+xml"/><item><title>GKE の node はどのようにログを転送しているのか</title><link>https://preview-blog.1q77.com/2020/03/how-gke-node-send-logs/</link><pubDate>Fri, 13 Mar 2020 15:40:41 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/how-gke-node-send-logs/</guid><description>GKE は何もしなくてもログを Cloud Logging (旧 Stackdriver Logging) に送ってくれて便利なんだけどどうやって送ってるのかな？と思って調べたメモ。なかなか興味深かった。 メトリク</description></item><item><title>gcloud でアカウントやプロジェクトを切り替える</title><link>https://preview-blog.1q77.com/2020/01/gcloud-switch-account-and-project/</link><pubDate>Sat, 25 Jan 2020 08:46:59 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/01/gcloud-switch-account-and-project/</guid><description>Google Cloud SDK の gcloud で複数のプロジェクトを切り替えたり、さらには複数アカウントを切り替えながら使う方法を調べた。 gcloud init # gcloud init としてブラウザで OAuth2 認証して、</description></item><item><title>GKE Tutorials (2)</title><link>https://preview-blog.1q77.com/2020/01/gke-tutorials-part2/</link><pubDate>Mon, 06 Jan 2020 16:04:18 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/01/gke-tutorials-part2/</guid><description>続 Tutorials を順に試す。（前回） Best Practices for Operating Containers # Best Practices for Operating Containers 前回の最後のやつと同じようなベストプラクティス紹介です。今回は運用編。 Use the native logging mechanisms of containers # 重要度:</description></item><item><title>GKE Tutorials (1)</title><link>https://preview-blog.1q77.com/2020/01/gke-tutorials-part1/</link><pubDate>Sun, 05 Jan 2020 15:55:53 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/01/gke-tutorials-part1/</guid><description>Tutorials を順に試す。 Deploying a containerized web application # Deploying a containerized web application サンプルアプリを git clone して docker build, push して YAML を使わず kubectl でコンテナをデプロイして、expose して pod の数を増やした</description></item><item><title>CloudShell のプロセス</title><link>https://preview-blog.1q77.com/2019/12/processes-in-cloudshell/</link><pubDate>Tue, 31 Dec 2019 14:55:12 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/12/processes-in-cloudshell/</guid><description>GCP の Cloud Shell を触ってみて、ふとどんな環境で動いてるんだろう？と気になったのでちょっと調べてみた。 Cloud Shell とは # Cloud Shell はブラウザから shell にアクセス可能な Linux</description></item><item><title>GKE Guestbook チュートリアルを試す</title><link>https://preview-blog.1q77.com/2015/07/gke-guestbook-tutorial/</link><pubDate>Sun, 12 Jul 2015 16:14:01 +0000</pubDate><guid>https://preview-blog.1q77.com/2015/07/gke-guestbook-tutorial/</guid><description>前回は Wordpress のチュートリアルを試しました、次はもう少し複雑な Guestbook Tutorial - Container Engine — Google Cloud Platform をなぞります。 Create a Container Engine cluster # GKE クラスタを作成します $ gcloud beta container clusters create guestbook Creating cluster</description></item><item><title>GKE Hello Wordpress チュートリアルを試す</title><link>https://preview-blog.1q77.com/2015/07/gke-hello-wordpress-tutorial/</link><pubDate>Sun, 12 Jul 2015 16:10:56 +0000</pubDate><guid>https://preview-blog.1q77.com/2015/07/gke-hello-wordpress-tutorial/</guid><description>Hello WordPress - Container Engine — Google Cloud Platform をなぞってみます。 Before You Begin で kubectl コマンドが使えるようにします。 Step 1: Create your cluster # まずはクラスタの作成。クラスタはひとつのマスターイン</description></item></channel></rss>