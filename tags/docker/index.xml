<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on 1Q77</title><link>https://preview-blog.1q77.com/tags/docker/</link><description>Recent content in Docker on 1Q77</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 04 Jan 2022 16:23:46 +0000</lastBuildDate><atom:link href="https://preview-blog.1q77.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker on Lima</title><link>https://preview-blog.1q77.com/2022/01/docker-on-lima/</link><pubDate>Tue, 04 Jan 2022 16:23:46 +0000</pubDate><guid>https://preview-blog.1q77.com/2022/01/docker-on-lima/</guid><description>以前、「Lima で nerdctl」という記事を書きました。その後、lima の VM 上で docker daemon を実行し、ホスト側から docker コマンドでアクセスするという方</description></item><item><title>mac で podman</title><link>https://preview-blog.1q77.com/2021/09/podman-on-mac/</link><pubDate>Thu, 23 Sep 2021 14:20:51 +0000</pubDate><guid>https://preview-blog.1q77.com/2021/09/podman-on-mac/</guid><description>Docker Desktop 代替シリーズ第三部、Podman です。(第一部 minkikube 編、第二部 Lima + nerdctl 編) Podman については Red Hat さんのブログが大変参考になります。 今回の Docker 社によるラ</description></item><item><title>Lima で nerdctl</title><link>https://preview-blog.1q77.com/2021/09/lima/</link><pubDate>Sun, 19 Sep 2021 16:58:10 +0000</pubDate><guid>https://preview-blog.1q77.com/2021/09/lima/</guid><description>Docker Desktop の代わりに docker cli + Minikube ってのを試しただけど、Kubernetes は docker を非推奨にしてるし、kubernetes は不要な場合は無駄が多いしなあ&amp;</description></item><item><title>Docker Desktop の代わりに Minikube を使ってみる</title><link>https://preview-blog.1q77.com/2021/09/replace-docker-desktop-with-minikube/</link><pubDate>Sat, 18 Sep 2021 16:07:27 +0000</pubDate><guid>https://preview-blog.1q77.com/2021/09/replace-docker-desktop-with-minikube/</guid><description>Docker のおかげで今の便利なコンテナがあります、ありがとうございます。でもどうなるのかやってみたかったんです。 Goodbye Docker Desktop, Hello Minikube! を参考に試してみます。 環境</description></item><item><title>docker-compose で wordpress サーバーを構築</title><link>https://preview-blog.1q77.com/2020/09/setup-wordpress-using-docker-compose/</link><pubDate>Mon, 21 Sep 2020 15:23:08 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/09/setup-wordpress-using-docker-compose/</guid><description>Lightsail の wordpress (bitnami) イメージを使ってこのブログを運用していましたが、PHP の更新が必要だけど bitnami でのやり方がよくわからんし、調べるのも面倒ということで 1 vCPU,</description></item><item><title>GitHub Actions での goreleaser と Docker Image の Push</title><link>https://preview-blog.1q77.com/2020/04/github-actions-goreleaser-docker-image-push/</link><pubDate>Sat, 11 Apr 2020 15:25:05 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/04/github-actions-goreleaser-docker-image-push/</guid><description>go でちょっとした調査用ツールを書いたのでついでに goreleaser を使ってみたのと、コンテナでも使いたかったので Docker Image を作って Registory への Push も GitHub Actions でやってみたメモで</description></item><item><title>Docker Desktop for Mac で docker 用 VM の中に入る</title><link>https://preview-blog.1q77.com/2020/03/dive-into-docker-for-mac-vm/</link><pubDate>Sat, 14 Mar 2020 11:26:48 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/dive-into-docker-for-mac-vm/</guid><description>Docker for Mac で、moby linux にアクセスする | Developers.IO を参考にさせていただきました。 mac で Docker を動かしてる hyperkit vm の中を覗いてみたいなと思い、ググったら上記の記事が</description></item><item><title>Kubernetes in docker の使い方</title><link>https://preview-blog.1q77.com/2019/08/kubernetes-in-docker/</link><pubDate>Mon, 26 Aug 2019 15:18:16 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/08/kubernetes-in-docker/</guid><description>Kubernetes in docker (kind) を使えるようになっておこうと思います。今回は DigitalOcean の CentOS 7 で試す。 Docker CE のインストール # Get Docker Engine - Community for CentOS sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine sudo</description></item><item><title>Guacamole の機能紹介</title><link>https://preview-blog.1q77.com/2019/01/guacamole-functions/</link><pubDate>Sun, 13 Jan 2019 16:19:08 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/01/guacamole-functions/</guid><description>kakakakakku さんのブログの Guacamole 記事を見て、私もやったのになあとこんな tweet をしてしまいました。 Guacamole を docker compose でって、去年やったわー、でもブログに書かずじまいだった</description></item><item><title>Single node docker swarm でお手軽 rolling update</title><link>https://preview-blog.1q77.com/2018/10/rolling-update-on-single-node-docker-swarm/</link><pubDate>Sat, 13 Oct 2018 05:00:02 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/10/rolling-update-on-single-node-docker-swarm/</guid><description>https://kazeburo.hatenablog.com/entry/2018/10/09/174111 という記事をみて、次のようなブコメを書いたのですが実際には試したことがなかったのでやってみることにしました。 これは1サーバーでも簡単にロー</description></item><item><title>Rancher 2.0 サーバーへのサーバー証明書の持ち込み</title><link>https://preview-blog.1q77.com/2018/09/rancher-2-0-bring-your-own-certificate/</link><pubDate>Sun, 16 Sep 2018 07:38:13 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/09/rancher-2-0-bring-your-own-certificate/</guid><description>設定方法は「Choose an SSL Option and Install Rancher」に書いてあるわけですが、どうやら最近の Chrome では HTST の設定されたサーバーは自己署名の証明書ではア</description></item><item><title>journalctl で docker のログをフィルタリング</title><link>https://preview-blog.1q77.com/2018/09/journalctl-log-filtering/</link><pubDate>Sun, 09 Sep 2018 09:51:59 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/09/journalctl-log-filtering/</guid><description>CentOS 7 で kubeadm を使って Kubernetes をセットアップしていると docker の logging driver が journald になっています。 各 container は docker daemon 配下で動作するため、systemd の unit 名はどれも docker.service になってし</description></item><item><title>CentOS 7 に kubeadm をインストール</title><link>https://preview-blog.1q77.com/2018/08/install-kubeadm-on-centos7/</link><pubDate>Sat, 11 Aug 2018 16:07:55 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/08/install-kubeadm-on-centos7/</guid><description>&amp;ldquo;Installing kubeadm - Kubernetes&amp;rdquo; を参考に CentOS 7 に kubeadm をインストールします 各種バージョン情報 # CentOS Linux release 7.5.1804 kubeadm v1.11.2 (GitCommit:&amp;ldquo;bb9ffb1654d4a729bb4cec18ff088eacc153c239&amp;rdquo;) docker 1.13.1 (docker-1.13.1-68.gitdded712.el7.centos.x86_64) kubelet v1.11.2 (Kubernetes v1.11.2) Before you begin # サポートされている OS は沢山あるが今回は CentOS</description></item><item><title>Docker Swarm mode を知る (secret)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-4/</link><pubDate>Sat, 24 Mar 2018 15:59:18 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-4/</guid><description>今回は docker secret を使ってみます。 Manage sensitive data with Docker secrets に使い方が書かれています。Kubernetes の Secrets とかなり似てます。 docker secret コマンドの syntax は次のようになって</description></item><item><title>Docker Swarm mode を知る (Swarm on Windows)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-3/</link><pubDate>Tue, 20 Mar 2018 15:02:17 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-3/</guid><description>Docker Swarm を Windows 上に構築してみます。 https://docs.docker.com/get-started/part4/ にドキュメントがありました。私の家の Laptop は Windows Pro じゃないから VirtualBox 使うやつです。 Docker Machine を2台作成 # docker-machine create --driver virtualbox myvm1 docker-machine create --driver virtualbox myvm2 $</description></item><item><title>Docker Swarm mode を知る (stack)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-2/</link><pubDate>Sat, 17 Mar 2018 16:11:55 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-2/</guid><description>docker-compose で stack を deploy する # https://docs.docker.com/engine/swarm/stack-deploy/ にあるサンプルアプリ、設定を用いて実際に動かしてみます。使ったコードは https://github.com/yteraoka/stackdemo に、イメージは https://hub.docker.com/r/yteraoka/stackdemo/ に。 次の内容の docker-compose.yml を用意し``` version: &amp;lsquo;3&amp;rsquo;</description></item><item><title>Docker Swarm mode を知る (setup)</title><link>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-1/</link><pubDate>Mon, 12 Mar 2018 15:13:03 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/03/docker-swarm-mode-1/</guid><description>時代は Kubernetes ですが、Docker Swarm mode を再調査していみます。 Swarm mode については 1.12 での登場時に調査した（Docker 1.12 の衝撃 [slideshare]）際</description></item><item><title>Docker Toolbox for Windows の使い方</title><link>https://preview-blog.1q77.com/2017/11/docker-toolbox-for-windows/</link><pubDate>Sun, 26 Nov 2017 14:05:38 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/11/docker-toolbox-for-windows/</guid><description>普段使いの家の端末を Windows にしてみたので、使い勝手改善中。 Docker Toolbox for Windows についてのメモ。 インストールについては公式ドキュメントを参照 Install Docker Toolbox on Windows VirtualBox がイン</description></item><item><title>RancherOSでsyslogを別サーバーに送る</title><link>https://preview-blog.1q77.com/2017/05/syslog-setting-on-rancheros/</link><pubDate>Mon, 08 May 2017 15:41:48 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/05/syslog-setting-on-rancheros/</guid><description>RancherOS は syslogd も docker container で稼働しています。 OS のサービスとして動かすコンテナは system-docker コマンドで操作します。 $ sudo system-docker ps --format 'table {{.ID}}\t{{.Image}}\t{{.Command}}\t{{.Names}}' CONTAINER ID IMAGE COMMAND NAMES 00d574dcd02a rancher/os-docker:1.12.6 &amp;quot;ros user-docker&amp;quot; docker a086f9e01e66 rancher/os-console:v1.0.1 &amp;quot;/usr/bin/ros entrypo&amp;quot; console d860b0783517 rancher/os-base:v1.0.1 &amp;quot;/usr/bin/ros entrypo&amp;quot;</description></item><item><title>さくらのクラウドで提供されたRancherOSを試す</title><link>https://preview-blog.1q77.com/2017/04/rancheros-on-sacloud/</link><pubDate>Wed, 26 Apr 2017 15:22:13 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/04/rancheros-on-sacloud/</guid><description>2017.04.20 に Rancher OSのアーカイブ提供を開始いたしました | さくらのクラウドニュース というニュースが出ていました。 Kubernetes を気軽に立てたり捨てたりする環境として</description></item><item><title>Kubernetes Secrets を使って minikube に netbox を deploy してみる</title><link>https://preview-blog.1q77.com/2017/02/deploy-netbox-on-minikube/</link><pubDate>Wed, 22 Feb 2017 15:59:40 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/02/deploy-netbox-on-minikube/</guid><description>Kubernetes お試し中です。Rancher で構築するべきか悩み中。 今回は YAML を書いて Deployment, Service を作成して Kubernetes 上に netbox を構築してみます。(netbox は Django + PostgreSQL のデータ</description></item><item><title>docker 1.13 の secrets を試す</title><link>https://preview-blog.1q77.com/2017/02/docker-1-13-secrets/</link><pubDate>Fri, 10 Feb 2017 14:54:59 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/02/docker-1-13-secrets/</guid><description>Introducing Docker Secrets Management で紹介されているパスワードなどの機密情報管理の仕組みを試してみました。 サーバー3台を起動 # いつものように DigitalOcean で Docker 1.13 on Ubuntu 16.04 のサーバーを3</description></item><item><title>Docker 使うなら石川さんごめんなさいしてる場合ではない</title><link>https://preview-blog.1q77.com/2017/02/docker-with-selinux/</link><pubDate>Wed, 01 Feb 2017 05:51:40 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/02/docker-with-selinux/</guid><description>Docker を Kubernetes や Swarm でサービスを実行する場合は JSON や YAML などで事前に定義したものを実行するだけなので知っているけどそれほど脅威ではありませんでしたが docker を便</description></item><item><title>DigitalOcean にて Rancher を試す - その2 (HA構成)</title><link>https://preview-blog.1q77.com/2017/01/rancher-on-digitalocean-part2/</link><pubDate>Sat, 28 Jan 2017 16:09:33 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/01/rancher-on-digitalocean-part2/</guid><description>今回は Rancher Server を HA 構成でセットアップしてみます。 https://docs.rancher.com/rancher/v1.3/en/installing-rancher/installing-server/#multi-nodes これまた簡単でした。 前回試した Quick Start Guide では docker run -d --restart=unless-stopped -p 8080:8080 rancher/server とするだけでした。この Container の中で MySQL も稼働し</description></item><item><title>Prometheus + Grafana + cAdvisor で Docker container のリソースモニタリング</title><link>https://preview-blog.1q77.com/2017/01/docker-container-resource-monitoring-using-prometheus-and-grafana-and-cadvisor/</link><pubDate>Sat, 14 Jan 2017 15:14:09 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/01/docker-container-resource-monitoring-using-prometheus-and-grafana-and-cadvisor/</guid><description>Docker 1.11 の Swarm クラスタのリソースモニタリングをどうしようかなということでひとまず各 Docker ホストに monitoringartist/zabbix-agent-xxl-limited/ をインストールし、zabbix で一応見れるようにして</description></item><item><title>DigitalOcean にて Rancher を試す - その1</title><link>https://preview-blog.1q77.com/2017/01/rancher-on-digitalocean-part1/</link><pubDate>Thu, 12 Jan 2017 15:32:28 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/01/rancher-on-digitalocean-part1/</guid><description>Docker 1.11 の Swarm クラスタを運用しているものの、Kubernetes に切り替えようかなと考えていて Rancher って便利なのかな？と思い Rancher Meetup Tokyo #3 に参加してきました</description></item><item><title>minikube でローカルでのテスト用 Kubernetes を構築</title><link>https://preview-blog.1q77.com/2016/10/setup-kubernetes-1-4-using-minikube/</link><pubDate>Sat, 15 Oct 2016 13:52:48 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/10/setup-kubernetes-1-4-using-minikube/</guid><description>Kubernetes を調査しようかなということで minikube を使ったセットアップを試してみる 環境は Ubuntu 16.04 の Note PC minikube は single node の Kubernetes を 1 コマンドでセットアップすることができるツール</description></item><item><title>Entrykit の使い方</title><link>https://preview-blog.1q77.com/2016/08/how-to-use-entrykit/</link><pubDate>Wed, 31 Aug 2016 15:49:59 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/08/how-to-use-entrykit/</guid><description>Docker コンテナで何かを実行する場合に便利なのが Entrykit 前に使い方を調べたはずなのに忘れてしまったので再度まとめてメモっておく インストールは release ページから</description></item><item><title>DC/OS をセットアップしてみる</title><link>https://preview-blog.1q77.com/2016/08/install-dcos/</link><pubDate>Sun, 21 Aug 2016 15:05:06 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/08/install-dcos/</guid><description>https://dcos.io/docs/1.7/administration/installing/custom/advanced/ を参考に DC/OS をセットアップしてみる 環境はいつものように DigitalOcean CoreOS で master 3台、agent 1台 別 OS で良かったのかどうかわからないけど Bootstrap 用サーバーを Ubuntu で1</description></item><item><title>Docker 1.12-rc5 を試す - part1</title><link>https://preview-blog.1q77.com/2016/07/docker-1-12-rc5-part1/</link><pubDate>Thu, 28 Jul 2016 16:47:56 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/07/docker-1-12-rc5-part1/</guid><description>そろそろ 1.12 の正式版がリリースされる予定ですが DigitalOcean に Ubuntu 14.04 を4台用意して Docker 1.12-rc5 をインストールします。 root@sm01:~# curl -fsSL https://test.docker.com/ | sh root@sm01:~# docker version Client: Version: 1.12.0-rc5 API version: 1.24 Go version: go1.6.3 Git commit: a3f2063 Built: Tue Jul</description></item><item><title>DigitalOcean が公開した NetBox を使ってみる</title><link>https://preview-blog.1q77.com/2016/07/digitalocean-netbox/</link><pubDate>Sat, 09 Jul 2016 13:30:41 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/07/digitalocean-netbox/</guid><description>Infrastructure as a Newsletter — July 07, 2016 にて DO’s network engineering team created NetBox, a tool that manages both IP address management (IPAM) and datacenter infrastructure management (DCIM). とあったので早速試してみました。 Django と PostgreSQL で作られた IP アドレスと DataCenter のラック、サ</description></item><item><title>Docker 1.12-RC3 の HEALTHCHECK を試す</title><link>https://preview-blog.1q77.com/2016/07/docker-healthcheck/</link><pubDate>Tue, 05 Jul 2016 16:09:40 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/07/docker-healthcheck/</guid><description>2016年7月14日にリリースされる予定の Docker 1.12 ですが RC3 に HEALTHCHECK 機能が入ったようなのでこれを試してみます。（1.12 のその他の目玉機能はDocke</description></item><item><title>CertM という TLS 証明書作成ツール</title><link>https://preview-blog.1q77.com/2016/06/certm/</link><pubDate>Fri, 10 Jun 2016 15:00:59 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/06/certm/</guid><description>https://github.com/ehazlett/certm という TLS 証明書作成ツールを見つけたのでメモっておく OpenSSL での証明書作成については https://jamielinux.com/docs/openssl-certificate-authority/index.html がとても良く出来ているのであまりこのツールに頼ることはない気</description></item><item><title>Docker Swarm を試す – その4</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part4/</link><pubDate>Sun, 20 Mar 2016 15:29:45 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part4/</guid><description>今回は Get started with multi-host networking に沿ってマルチホストでのオーバーレイネットワークを試してみます。 KVS として Consul を立ち上げる # まず mh-keystore という名前（名前はなんでも良い</description></item><item><title>Docker Swarm を試す – その3</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part3/</link><pubDate>Thu, 17 Mar 2016 15:48:43 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part3/</guid><description>Docker Swarm を試す – その１ で swarm の agent の join はどうやって manager (master?) を探しているのだろう？マルチキャスト？と書いた部分ですが Docker Swarm Discovery https://docs.docker.com/swarm/discovery/ に書いてありました。 「Dock</description></item><item><title>Docker Swarm を試す – その2</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part2/</link><pubDate>Wed, 16 Mar 2016 15:42:09 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part2/</guid><description>前回 の続きです。 $ docker info Containers: 8 Running: 4 Paused: 0 Stopped: 4 Images: 8 Server Version: swarm/1.1.3 Role: primary Strategy: spread Filters: health, port, dependency, affinity, constraint Nodes: 2 agent1: 192.168.99.101:2376 └ Status: Healthy └ Containers: 3 └ Reserved CPUs: 0 / 1 └ Reserved Memory: 0 B / 1.021 GiB └ Labels: executiondriver=native-0.2, kernelversion=4.1.19-boot2docker, operatingsystem=Boot2Docker 1.10.3 (TCL 6.4.1); master : 625117e -</description></item><item><title>Docker Swarm を試す - その１</title><link>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part1/</link><pubDate>Tue, 15 Mar 2016 15:22:50 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/03/evaluate-docker-swarm-part1/</guid><description>Evaluate Swarm in a sandbox を参考に Docker Swarm を試してみます。 Swarm クラスタを構築するための docker machine を作成する # docker-machine の現状確認 # $ docker-machine ls NAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS default - virtualbox Stopped Unknown 今は不要なので</description></item><item><title>nginx-proxy, docker-gen という便利ツール</title><link>https://preview-blog.1q77.com/2016/02/nginx-proxy-and-docker-gen/</link><pubDate>Tue, 02 Feb 2016 15:15:22 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/02/nginx-proxy-and-docker-gen/</guid><description>先日ようやく Docker を触り始めたわけですが thumbor を使う場合、前段に nginx を置いてキャッシュさせるべきだから nginx の docker も必要だなっと思って調べてたら jwilder/nginx-proxy というもの</description></item><item><title>thumbor の docker 化</title><link>https://preview-blog.1q77.com/2016/01/dockerize-thumbor/</link><pubDate>Sun, 31 Jan 2016 16:19:24 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/01/dockerize-thumbor/</guid><description>Docker については Web や書籍で情報は追いつつも手を動かせていなかったがそろそろやらねばということで、まずは以前紹介した画像のサムネイル化やクロップ、</description></item><item><title>GKE Hello Wordpress チュートリアルを試す</title><link>https://preview-blog.1q77.com/2015/07/gke-hello-wordpress-tutorial/</link><pubDate>Sun, 12 Jul 2015 16:10:56 +0000</pubDate><guid>https://preview-blog.1q77.com/2015/07/gke-hello-wordpress-tutorial/</guid><description>Hello WordPress - Container Engine — Google Cloud Platform をなぞってみます。 Before You Begin で kubectl コマンドが使えるようにします。 Step 1: Create your cluster # まずはクラスタの作成。クラスタはひとつのマスターイン</description></item></channel></rss>