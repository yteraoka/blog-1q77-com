<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on 1Q77</title><link>https://preview-blog.1q77.com/tags/kubernetes/</link><description>Recent content in Kubernetes on 1Q77</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 12 Aug 2022 12:19:57 +0000</lastBuildDate><atom:link href="https://preview-blog.1q77.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Graceful Node Shutdown で Terminated 状態で残る Pod を削除する cronjob</title><link>https://preview-blog.1q77.com/2022/08/delete-failed-pod-periodically/</link><pubDate>Fri, 12 Aug 2022 12:19:57 +0000</pubDate><guid>https://preview-blog.1q77.com/2022/08/delete-failed-pod-periodically/</guid><description>GKE (GKE 限定な話ではないけれども) で Preemptible な node を使用していると Graceful Node Shutdown により停止させられた Pod が Failed 状態でどんどん溜まっていって結構邪魔です。 できれば消え</description></item><item><title>envoy-sidecar-helper で Job の終了後に istio-proxy を停止させる</title><link>https://preview-blog.1q77.com/2022/08/stop-istio-proxy-using-envoy-sidecar-helper/</link><pubDate>Fri, 12 Aug 2022 11:51:14 +0000</pubDate><guid>https://preview-blog.1q77.com/2022/08/stop-istio-proxy-using-envoy-sidecar-helper/</guid><description>Istio を導入した環境で Job (CronJob) を実行すると、sidecar としての istio-proxy コンテナを Job 本来の処理が終わった後に istio-proxy コンテナを終了させないといつまで経っても Pod</description></item><item><title>istio-proxy の log level を変更する</title><link>https://preview-blog.1q77.com/2022/06/istio-proxy-log-level/</link><pubDate>Tue, 07 Jun 2022 07:34:29 +0000</pubDate><guid>https://preview-blog.1q77.com/2022/06/istio-proxy-log-level/</guid><description>Istio でよくわからない通信の問題が発生した際、Envoy の access log だけでは何が起きているのかわからない場合があります。そんなとき、当該 Pod の LogLevel を debug に変</description></item><item><title>Mizu で kubernetes 内の通信を覗く (part 1)</title><link>https://preview-blog.1q77.com/2022/06/using-mizu-part-1/</link><pubDate>Sat, 04 Jun 2022 16:04:52 +0000</pubDate><guid>https://preview-blog.1q77.com/2022/06/using-mizu-part-1/</guid><description>Mizu - API Traffic viewer for Kubernetes というものの存在を知ったので試してみます。 サイトには次のように書いてあります。気になります。 Mizu offers a real-time view of all HTTP requests, REST and gRPC API calls, as well as</description></item><item><title>istio sidecar の停止を connection がなくなるまで遅らせる</title><link>https://preview-blog.1q77.com/2022/02/istio-exit-on-zero-active-connections/</link><pubDate>Sat, 26 Feb 2022 15:52:27 +0000</pubDate><guid>https://preview-blog.1q77.com/2022/02/istio-exit-on-zero-active-connections/</guid><description>新機能 EXIT_ON_ZERO_ACTIVE_CONNECTIONS # 以前、「Istio 導入への道 – sidecar の調整編」という記事で、Istio の sidecar (istio-proxy) が、アプリの終了を待たずに停止してしまってアプリ側が通信で</description></item><item><title>telepresence 入門 (2)</title><link>https://preview-blog.1q77.com/2022/01/telepresence-part-2/</link><pubDate>Sat, 08 Jan 2022 05:27:39 +0000</pubDate><guid>https://preview-blog.1q77.com/2022/01/telepresence-part-2/</guid><description>前回の telepresence 入門 (1) の続きです。今回は Kubernetes クラスタの Service へのアクセスをインターセプトして手元の環境に転送することを試します。Kubernetes 側の volume</description></item><item><title>telepresence 入門 (1)</title><link>https://preview-blog.1q77.com/2021/12/telepresence-part-1/</link><pubDate>Fri, 31 Dec 2021 14:54:43 +0000</pubDate><guid>https://preview-blog.1q77.com/2021/12/telepresence-part-1/</guid><description>telepresence というツールがあります。手元の端末が Kubernetes クラスタ内にいるかのような通信を可能にし、Kubernetes の Pod の Container への通信をインターセプトして手</description></item><item><title>Docker Desktop の代わりに Minikube を使ってみる</title><link>https://preview-blog.1q77.com/2021/09/replace-docker-desktop-with-minikube/</link><pubDate>Sat, 18 Sep 2021 16:07:27 +0000</pubDate><guid>https://preview-blog.1q77.com/2021/09/replace-docker-desktop-with-minikube/</guid><description>Docker のおかげで今の便利なコンテナがあります、ありがとうございます。でもどうなるのかやってみたかったんです。 Goodbye Docker Desktop, Hello Minikube! を参考に試してみます。 環境</description></item><item><title>Nginx Ingress Controller と oauth2-proxy で SSO</title><link>https://preview-blog.1q77.com/2020/12/sso-using-nginx-ingress-controller-and-oauth2-proxy/</link><pubDate>Tue, 08 Dec 2020 15:21:27 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/12/sso-using-nginx-ingress-controller-and-oauth2-proxy/</guid><description>Advent Calendar 2020 全部オレシリーズ 8日目です。もう完走は諦めました。(再掲) Nginx Ingress Controller と oauth2-proxy を組み合わせて簡単に SSO を導入するためのメモです。複数のサービスがあ</description></item><item><title>Litmus 入門</title><link>https://preview-blog.1q77.com/2020/11/litmus-getstarted/</link><pubDate>Tue, 24 Nov 2020 15:37:50 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/11/litmus-getstarted/</guid><description>Chaos Mesh を少しかじっていましたが、最近話題の Litmus に入門してみます。Litmus には Chaos Mesh にはなかった EC2 Instance の停止や Docker Daemon の停止や kubelet の停止などができるのが</description></item><item><title>メインコンテナの起動前に istio-proxy の起動を完了させる</title><link>https://preview-blog.1q77.com/2020/08/delaying-application-start-until-sidecar-is-ready/</link><pubDate>Tue, 25 Aug 2020 14:24:46 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/08/delaying-application-start-until-sidecar-is-ready/</guid><description>2020年8月21日に Istio 1.7 がリリースされました。その RELEASE NOTE の Production operability improvements 項に次の節を見つけました。 You can delay the application start until after the sidecar is started. This increases the reliability for deployments where the application needs to access resources</description></item><item><title>kubernetes に deploy 済みの Container に root で入っていじりたい</title><link>https://preview-blog.1q77.com/2020/05/kubectl-ssh/</link><pubDate>Sun, 10 May 2020 14:47:38 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/05/kubectl-ssh/</guid><description>コンテナへの権限は必要最低限に絞るべしということで、プロセスの実行ユーザーは root ではないし、特権モードで動かすなんことにはなっていないと思いま</description></item><item><title>kubie 3分 Cooking!</title><link>https://preview-blog.1q77.com/2020/04/kubie/</link><pubDate>Sun, 26 Apr 2020 05:13:41 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/04/kubie/</guid><description>kubectl などで複数の Kubernetes クラスタを切り替えるのに kubectx を使っていますが、これでは別ターミナルにしても同時に複数のクラスタにアクセスすることができません。</description></item><item><title>Istio 導入への道 – sidecar の調整編</title><link>https://preview-blog.1q77.com/2020/03/istio-part12/</link><pubDate>Sun, 29 Mar 2020 17:01:29 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/istio-part12/</guid><description>Istio シリーズ 第12回です。 Istio は各 Pod に sidecar として Envoy コンテナを差し込み、通信の受信も送信も Envoy を経由します。アプリの更新時などに旧バージョンの Pod の停止</description></item><item><title>cert-manager で証明書管理</title><link>https://preview-blog.1q77.com/2020/03/cert-manager/</link><pubDate>Sat, 28 Mar 2020 14:02:59 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/cert-manager/</guid><description>前回の「ArgoCD と Istio Ingress Gateway」と、前々回の「 Istio 導入への道 – Ingress Gateway で TLS Termination 編 」で TLS の証明書を手動で取得して Secret として登録したが、登録もさ</description></item><item><title>Istio 導入への道 – Ingress Gateway で TLS Termination 編</title><link>https://preview-blog.1q77.com/2020/03/istio-part11/</link><pubDate>Fri, 20 Mar 2020 15:02:51 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/istio-part11/</guid><description>Istio シリーズ 第11回です。 TLS Termination # 外部からのアクセスを Istio Ingrress Gateway に TLS の Temination をさせたいことがありますね。今回はこれを試します。 TLS Termination の設定は Gateway で行います。</description></item><item><title>Istio 導入への道 – 図解</title><link>https://preview-blog.1q77.com/2020/03/istio-part10/</link><pubDate>Thu, 19 Mar 2020 16:13:28 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/istio-part10/</guid><description>Istio シリーズ 第10回です。 そろそろ図解してみようと思ったのだが&amp;hellip; 正確に描くのは非常に難しい、そのうち Argo CD + Argo rollouts についても書くので</description></item><item><title>GKE の node はどのようにログを転送しているのか</title><link>https://preview-blog.1q77.com/2020/03/how-gke-node-send-logs/</link><pubDate>Fri, 13 Mar 2020 15:40:41 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/how-gke-node-send-logs/</guid><description>GKE は何もしなくてもログを Cloud Logging (旧 Stackdriver Logging) に送ってくれて便利なんだけどどうやって送ってるのかな？と思って調べたメモ。なかなか興味深かった。 メトリク</description></item><item><title>Presslabs の mysql-operator (part2)</title><link>https://preview-blog.1q77.com/2020/03/presslabs-mysql-operator-part2/</link><pubDate>Sun, 01 Mar 2020 12:39:55 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/03/presslabs-mysql-operator-part2/</guid><description>Orchestracot の CLI 操作 # 前回に引き続き、Presslabs の mysql-operator です。今回は failover 周りの動作を確認します。Orchestrator の操作は Web UI からも操作できま</description></item><item><title>Presslabs の mysql-operator (part1)</title><link>https://preview-blog.1q77.com/2020/02/presslabs-mysql-operator-part1/</link><pubDate>Sat, 29 Feb 2020 16:51:43 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/02/presslabs-mysql-operator-part1/</guid><description>Vitess の helm の完成後がまだまだっぽくて Issue を上げたりもしてるけど Shard 不要な要件なら他の選択肢も持っておくべきだろうなということで探してみると mysql-operator が Oracle から</description></item><item><title>kind で kubernetes に触れる (2) - Istio</title><link>https://preview-blog.1q77.com/2020/01/kind-part-2/</link><pubDate>Tue, 07 Jan 2020 16:44:11 +0000</pubDate><guid>https://preview-blog.1q77.com/2020/01/kind-part-2/</guid><description>前回の続き。今回は Istio を導入してみる。 クラスタの作成 # Control Plane 1台、Worker Node 2台のクラスタを作成する。 $ cat cluster.yaml # three node (two workers) cluster kind: Cluster apiVersion: kind.x-k8s.io/v1alpha4 nodes: - role: control-plane - role:</description></item><item><title>kind で kubernetes に触れる (1)</title><link>https://preview-blog.1q77.com/2019/12/kind-part-1/</link><pubDate>Fri, 20 Dec 2019 08:39:43 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/12/kind-part-1/</guid><description>kind のインストール # $ curl -Lo ~/bin/kind ¥ https://github.com/kubernetes-sigs/kind/releases/download/v0.6.1/kind-$(uname)-amd64 $ chmod +x ~/bin/kind $ kind version クラスタの作成・削除 # クラスタの作成 # $ kind create cluster Creating cluster &amp;quot;kind&amp;quot; ... ✓ Ensuring node image (kindest/node:v1.16.3) 🖼 ✓ Preparing nodes 📦 ✓ Writing configuration 📜 ✓ Starting control-plane 🕹️ ✓ Installing</description></item><item><title>Kubernetes in docker の使い方</title><link>https://preview-blog.1q77.com/2019/08/kubernetes-in-docker/</link><pubDate>Mon, 26 Aug 2019 15:18:16 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/08/kubernetes-in-docker/</guid><description>Kubernetes in docker (kind) を使えるようになっておこうと思います。今回は DigitalOcean の CentOS 7 で試す。 Docker CE のインストール # Get Docker Engine - Community for CentOS sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine sudo</description></item><item><title>Rancher: Migrating from an HA RKE Add-on Install</title><link>https://preview-blog.1q77.com/2019/03/rancher-migrating-from-an-ha-rke-add-on-install/</link><pubDate>Sun, 24 Mar 2019 13:56:39 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/03/rancher-migrating-from-an-ha-rke-add-on-install/</guid><description>RKE Add-on での Rancher セットアップはもう古い # 過去に試していた RKE での Rancher の HA セットアップ (続 Rancher 2.0 の HA 構成を試す) はどうやらもう古いらしい。2.0.8 までし</description></item><item><title>Rancher2 の構築からサービス公開まで</title><link>https://preview-blog.1q77.com/2019/03/rancher2-walk-through/</link><pubDate>Sun, 10 Mar 2019 12:09:55 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/03/rancher2-walk-through/</guid><description>Rancher 2.x の HA 構成を RKE でセットアップし、Kubernetes クラスタを追加して、その中にコンテナをデプロイし、nginx-ingress-cont</description></item><item><title>kubeadm で kubernetes 1.13 の HA 環境を構築</title><link>https://preview-blog.1q77.com/2019/01/creating-highly-available-1-13-clusters-with-kubeadm/</link><pubDate>Sat, 05 Jan 2019 16:54:22 +0000</pubDate><guid>https://preview-blog.1q77.com/2019/01/creating-highly-available-1-13-clusters-with-kubeadm/</guid><description>kubeadm を使って HA な Kubernetes を構築するというのを 1.11 の時に試して Ansible Playbook にしたりしていましたが、kubeadm が GA になったことだし 1.13 での手順に更新してみた(g</description></item><item><title>Self-hosted Kubernetes</title><link>https://preview-blog.1q77.com/2018/09/self-hosted-kubernetes/</link><pubDate>Tue, 11 Sep 2018 16:06:54 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/09/self-hosted-kubernetes/</guid><description>🐵 去る 2018年9月7日、Tech-on MeetUp#02「マネージドサービスだけに頼らないコンテナ基盤」 に参加してオンプレ Kubernetes 他の話を聞いて</description></item><item><title>Rancher 2.0.8 までの変更点まとめ</title><link>https://preview-blog.1q77.com/2018/09/after-the-rancher-2-0/</link><pubDate>Mon, 10 Sep 2018 16:51:26 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/09/after-the-rancher-2-0/</guid><description>Rancher 2.1 の話がぜんぜん聞こえてこないなーどうなってるのかな？と思って GitHub の releases ページを覗いてみたらいつの間にか 2.0.8 がリリースされていました。 ということ</description></item><item><title>etcd stacked Highly Available Kubernetes cluster を Ansible でセットアップ</title><link>https://preview-blog.1q77.com/2018/08/etcd-stacked-highly-available-kubernetes-cluster/</link><pubDate>Mon, 20 Aug 2018 14:51:27 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/08/etcd-stacked-highly-available-kubernetes-cluster/</guid><description>Creating Highly Available Clusters with kubeadm の Stacked control plane nodes で etcd を control-plane に相乗りさせる kubernetes cluster の作成を試します。今回も DigitalOcean で CentOS 7 を使います。 また、面倒なので Ansible Playbook でセットアップするようにしま</description></item><item><title>外部 etcd な Kubernetes を DigitalOcean に構築する Ansible Playbook</title><link>https://preview-blog.1q77.com/2018/08/do-k8s-external-etcd/</link><pubDate>Sat, 18 Aug 2018 15:23:47 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/08/do-k8s-external-etcd/</guid><description>ケチって都度々々削除するため手作業は辛いので Ansible Playbook にしてみた https://github.com/yteraoka/do-k8s-external-etcd</description></item><item><title>kubeadm で外部 etcd で HA な Kubernetes クラスタをセットアップする</title><link>https://preview-blog.1q77.com/2018/08/creating-highly-available-clusters-with-kubeadm/</link><pubDate>Thu, 16 Aug 2018 14:59:22 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/08/creating-highly-available-clusters-with-kubeadm/</guid><description>etcd を外部にもつ HA な Kubernetes クラスタを kubeadm で構築します。Creating Highly Available Clusters with kubeadm をなぞります。 各種バージョン情報 # CentOS Linux release 7.5.1804 kubeadm v1.11.2 (GitCommit:&amp;ldquo;bb9ffb1654d4a729bb4cec18ff088eacc153c239&amp;rdquo;) docker 1.13.1 (docker-1.13.1-68.gitdded712.el7.centos.x86_64) kubelet v1.11.2 (Kubernetes v1.11.2) etcd 3.2.18 Set</description></item><item><title>続 Rancher 2.0 の HA 構成を試す</title><link>https://preview-blog.1q77.com/2018/05/rancher-2-0-ha-install-using-terraform-and-rke/</link><pubDate>Sat, 26 May 2018 13:48:10 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/05/rancher-2-0-ha-install-using-terraform-and-rke/</guid><description>前回、運悪く起動しないタイミングで試してしまった Rancher server の HA セットアップですが、その後、当該変更が Revert されていたので再度試せばうまくいきそうです。</description></item><item><title>Rancher 2.0 の HA 構成を試す</title><link>https://preview-blog.1q77.com/2018/05/rancher-2-0-ha-install/</link><pubDate>Sun, 13 May 2018 15:11:32 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/05/rancher-2-0-ha-install/</guid><description>Beta を試すシリーズ（その1、その2）を書いていましたがついに 5月1日に Rancher 2.0 が GA になりました Announcing Rancher 2.0 GA! (Docker Hub にある image の tag はまだ preview でした) 今回は High Availability 構</description></item><item><title>Cilium ってなんだ？</title><link>https://preview-blog.1q77.com/2018/05/cilium/</link><pubDate>Wed, 09 May 2018 15:03:10 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/05/cilium/</guid><description>Cilium 1.0: Bringing the BPF Revolution to Kubernetes Networking and Security という記事を見かけた Cilium っていうのが Version 1.0 になったそうだ。はて？これは何をもったらすものだろう？ コンテナ化、マイクロサービ</description></item><item><title>kubeadm で kubernetes を構築</title><link>https://preview-blog.1q77.com/2018/04/create-kubernetes-using-kubeadm/</link><pubDate>Mon, 30 Apr 2018 13:52:13 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/04/create-kubernetes-using-kubeadm/</guid><description>DigitalOcean の Community サイトにある Tutorials に「How To Create a Kubernetes 1.10 Cluster Using Kubeadm on Ubuntu 16.04」というのがあったので試してみる。 Tutorial 書いて提供するとお金がもらえる（Write for</description></item><item><title>Rancher 2.0 beta を触ってみる - その2</title><link>https://preview-blog.1q77.com/2018/04/rancher-2-0-beta-part2/</link><pubDate>Tue, 17 Apr 2018 15:18:41 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/04/rancher-2-0-beta-part2/</guid><description>前回の続きです。 beta2 から beta3 に更新されて Amazon EKS も管理できるようになっていました。 今回は Rancher の Web UI からポチポチやってコンテナをデプロイしてみます。 DigitalOcean に</description></item><item><title>Rancher 2.0 beta を触ってみる - その1</title><link>https://preview-blog.1q77.com/2018/04/rancher-2-0-beta2-part1/</link><pubDate>Mon, 09 Apr 2018 15:43:39 +0000</pubDate><guid>https://preview-blog.1q77.com/2018/04/rancher-2-0-beta2-part1/</guid><description>Rancher 2.0 が beta になったそうなので試してみます Rancher 2.0 Now Feature Complete, Enters Final Beta Phase 2.0 のゴールはここに書かれています Release Goals 準備 # Quick Start Guide の HOST AND NODE REQUIREMENTS に Operating System: Ubuntu 16.04 (64-bit) Memory: 4GB Ports: 80, 443 Software: Docker</description></item><item><title>RancherのKubernetesにサービスをデプロイしてみる(2)</title><link>https://preview-blog.1q77.com/2017/05/deploy-services-on-k8s-with-rancher-2/</link><pubDate>Sat, 06 May 2017 16:01:07 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/05/deploy-services-on-k8s-with-rancher-2/</guid><description>前回「RancherのKubernetesにサービスをデプロイしてみる」の続きです。 前回は guestbook-all-in-one.yaml の type: LoadBalancer をアンコメントして Rancher の Load Balancer サービスが自動で</description></item><item><title>RancherのKubernetesにサービスをデプロイしてみる</title><link>https://preview-blog.1q77.com/2017/05/deploy-services-on-k8s-with-rancher/</link><pubDate>Tue, 02 May 2017 12:44:12 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/05/deploy-services-on-k8s-with-rancher/</guid><description>「さくらのクラウドRancherOSでKubernetes環境を構築」の続きです。さくらのクラウドで Rancher + RancherOS を使って構築した Kubernetes 環境にサービスを</description></item><item><title>さくらのクラウドRancherOSでKubernetes環境を構築</title><link>https://preview-blog.1q77.com/2017/05/build-kubernetes-using-rancheros-on-sakura-cloud/</link><pubDate>Mon, 01 May 2017 13:44:55 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/05/build-kubernetes-using-rancheros-on-sakura-cloud/</guid><description>「さくらのクラウドで提供されたRancherOSを試す」の続きです。Rancher で Kubernetes 環境を作ってアプリをデプロイしてみます。 Rancher Server セットアッ</description></item><item><title>Kubernetes Secrets を使って minikube に netbox を deploy してみる</title><link>https://preview-blog.1q77.com/2017/02/deploy-netbox-on-minikube/</link><pubDate>Wed, 22 Feb 2017 15:59:40 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/02/deploy-netbox-on-minikube/</guid><description>Kubernetes お試し中です。Rancher で構築するべきか悩み中。 今回は YAML を書いて Deployment, Service を作成して Kubernetes 上に netbox を構築してみます。(netbox は Django + PostgreSQL のデータ</description></item><item><title>minikube を試す - その3</title><link>https://preview-blog.1q77.com/2017/01/minikube-part3/</link><pubDate>Tue, 10 Jan 2017 14:00:31 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/01/minikube-part3/</guid><description>minikube を試す – その2 の続きです。 デプロイメントのスケーリング # 同じアプリ(Pod)を沢山並べたい時は、数を指定するだけで増減できて、異常終了など</description></item><item><title>minikube を試す - その2</title><link>https://preview-blog.1q77.com/2017/01/minikube-part2/</link><pubDate>Mon, 09 Jan 2017 16:12:36 +0000</pubDate><guid>https://preview-blog.1q77.com/2017/01/minikube-part2/</guid><description>minikubeでKubernetesのチュートリアルをやってみた というお役立ち記事をみたので前回 (minikube でローカルでのテスト用 Kubernetes を構築)の続きを</description></item><item><title>minikube でローカルでのテスト用 Kubernetes を構築</title><link>https://preview-blog.1q77.com/2016/10/setup-kubernetes-1-4-using-minikube/</link><pubDate>Sat, 15 Oct 2016 13:52:48 +0000</pubDate><guid>https://preview-blog.1q77.com/2016/10/setup-kubernetes-1-4-using-minikube/</guid><description>Kubernetes を調査しようかなということで minikube を使ったセットアップを試してみる 環境は Ubuntu 16.04 の Note PC minikube は single node の Kubernetes を 1 コマンドでセットアップすることができるツール</description></item><item><title>GKE Guestbook チュートリアルを試す</title><link>https://preview-blog.1q77.com/2015/07/gke-guestbook-tutorial/</link><pubDate>Sun, 12 Jul 2015 16:14:01 +0000</pubDate><guid>https://preview-blog.1q77.com/2015/07/gke-guestbook-tutorial/</guid><description>前回は Wordpress のチュートリアルを試しました、次はもう少し複雑な Guestbook Tutorial - Container Engine — Google Cloud Platform をなぞります。 Create a Container Engine cluster # GKE クラスタを作成します $ gcloud beta container clusters create guestbook Creating cluster</description></item><item><title>GKE Hello Wordpress チュートリアルを試す</title><link>https://preview-blog.1q77.com/2015/07/gke-hello-wordpress-tutorial/</link><pubDate>Sun, 12 Jul 2015 16:10:56 +0000</pubDate><guid>https://preview-blog.1q77.com/2015/07/gke-hello-wordpress-tutorial/</guid><description>Hello WordPress - Container Engine — Google Cloud Platform をなぞってみます。 Before You Begin で kubectl コマンドが使えるようにします。 Step 1: Create your cluster # まずはクラスタの作成。クラスタはひとつのマスターイン</description></item></channel></rss>